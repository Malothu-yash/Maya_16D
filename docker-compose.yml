
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - neo4j
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["celery", "-A", "app.celery_worker.celery_app", "worker", "--loglevel=info", "-P", "solo"]
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - backend

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery_worker.celery_app beat --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - backend

  redis:
    image: "redis:alpine"
    ports:
      - "6380:6379"

  neo4j:
    image: neo4j:4.4
    ports:
      - "7475:7474"
      - "7688:7687"
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/password123

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

volumes:
  neo4j_data:
